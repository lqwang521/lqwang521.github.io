<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王li权的博客</title>
  
  <subtitle>凡是你抗拒的，都会持续。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lqwang521.github.io/"/>
  <updated>2019-03-17T08:27:43.180Z</updated>
  <id>https://lqwang521.github.io/</id>
  
  <author>
    <name>wangliquan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo + github 搭建个人博客</title>
    <link href="https://lqwang521.github.io/2019/03/16/hexo-github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://lqwang521.github.io/2019/03/16/hexo-github-搭建个人博客/</id>
    <published>2019-03-16T15:26:36.000Z</published>
    <updated>2019-03-17T08:27:43.180Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.liuxianan.com/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">原文链接</a>原文写的真不错，步骤清晰，我加了一些内容细化了整个过程。</p><h2 id="使用github-pages服务搭建博客的好处有："><a href="#使用github-pages服务搭建博客的好处有：" class="headerlink" title="使用github pages服务搭建博客的好处有："></a>使用github pages服务搭建博客的好处有：</h2><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ol><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><ul><li>有一个github账号，没有的话去注册一个；</li><li>安装了node.js、npm，并了解相关基础知识；</li><li>安装了git</li></ul><h2 id="2-搭建github博客"><a href="#2-搭建github博客" class="headerlink" title="2. 搭建github博客"></a>2. 搭建github博客</h2><h3 id="2-1-搭建github博客"><a href="#2-1-搭建github博客" class="headerlink" title="2.1 搭建github博客"></a>2.1 搭建github博客</h3><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：username.github.io，其中username是你的用户名；</li></ol><h3 id="2-2-配置SSH-key"><a href="#2-2-配置SSH-key" class="headerlink" title="2.2 配置SSH key"></a>2.2 配置SSH key</h3><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">cd</span> ~<span class="string">/.</span> ssh <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh-keygen -t rsa -C <span class="string">"邮件地址"</span></span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p>测试是否成功</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -T git<span class="variable">@github</span>.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure><p>你还需要配置：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"lqwang521"</span><span class="comment">// 你的github用户名，非昵称</span></span><br><span class="line">$ git config --global user<span class="selector-class">.email</span>  <span class="string">"731696053@qq.com"</span><span class="comment">// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure><h2 id="3-使用hexo"><a href="#3-使用hexo" class="headerlink" title="3. 使用hexo"></a>3. 使用hexo</h2><h3 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h3><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p><a href="http://hexo.io" target="_blank" rel="noopener">官网</a><br><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">github</a></p><h3 id="3-2-原理"><a href="#3-2-原理" class="headerlink" title="3.2 原理"></a>3.2 原理</h3><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h3 id="3-3-注意事项"><a href="#3-3-注意事项" class="headerlink" title="3.3 注意事项"></a>3.3 注意事项</h3><ol><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的；</li><li>如果用windows系统可需要注意<br>，很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li></ol><h3 id="3-4-安装"><a href="#3-4-安装" class="headerlink" title="3.4 安装"></a>3.4 安装</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> -g hexo</span><br></pre></td></tr></table></figure><h3 id="3-5-初始化"><a href="#3-5-初始化" class="headerlink" title="3.5 初始化"></a>3.5 初始化</h3><p>进入一个提前创建好的目录执行如下命令</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo init</span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括node_modules等等</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo g <span class="comment"># 生成</span></span><br><span class="line"><span class="variable">$ </span>hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>hexo s是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容</p><h3 id="3-6-修改主题"><a href="#3-6-修改主题" class="headerlink" title="3.6 修改主题"></a>3.6 修改主题</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题官网</a></p><p>我使用的是简单大方的next主题，进入themes目录下直接获取源码就可以，这种方式可以任意切换版本和更新，推荐这种方式</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>修改_config.yml中的theme: landscape改为theme: yilia，然后重新执行hexo g来重新生成。</p><p>如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。</p><h3 id="3-7-上传之前"><a href="#3-7-上传之前" class="headerlink" title="3.7 上传之前"></a>3.7 上传之前</h3><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h3 id="3-8-上传到github"><a href="#3-8-上传到github" class="headerlink" title="3.8 上传到github"></a>3.8 上传到github</h3><p>如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。</p><p>首先，ssh key肯定要配置好。</p><p>其次，配置_config.yml中有关deploy的部分：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:liuxianan/liuxianan.github.io.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>执行hexo d的话一般会报如下错误</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer <span class="keyword">not</span> found: github 或者 Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure><p>安装插件解决</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h3 id="3-9-保留CNAME、README-md等文件"><a href="#3-9-保留CNAME、README-md等文件" class="headerlink" title="3.9 保留CNAME、README.md等文件"></a>3.9 保留CNAME、README.md等文件</h3><p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p><p>一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的.</p><h3 id="3-10-常用hexo命令"><a href="#3-10-常用hexo命令" class="headerlink" title="3.10 常用hexo命令"></a>3.10 常用hexo命令</h3><p>常见命令</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"postName"</span> <span class="meta">#新建文章</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">"pageName"</span> <span class="meta">#新建页面</span></span><br><span class="line">hexo generate <span class="meta">#生成静态页面至public目录</span></span><br><span class="line">hexo <span class="keyword">server</span> <span class="meta">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="meta">#部署到GitHub</span></span><br><span class="line">hexo help  <span class="meta"># 查看帮助</span></span><br><span class="line">hexo version  <span class="meta">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><h3 id="3-11-修改-config-yml"><a href="#3-11-修改-config-yml" class="headerlink" title="3.11 修改_config.yml"></a>3.11 修改_config.yml</h3><p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><h3 id="3-12-开始写博客"><a href="#3-12-开始写博客" class="headerlink" title="3.12 开始写博客"></a>3.12 开始写博客</h3><p>定位到我们的hexo根目录，执行命令：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">'my-first-blog'</span></span><br></pre></td></tr></table></figure><p>hexo会帮我们在_posts下生成相关md文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">postName</span> <span class="comment">#文章页面上的显示名称，一般是中文</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="bullet">-12</span><span class="bullet">-02</span> <span class="number">15</span><span class="string">:30:16</span> <span class="comment">#文章生成时间，一般不改，当然也可以任意修改</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">默认分类</span> <span class="comment">#分类</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[tag1,tag2,tag3]</span> <span class="comment">#文章标签，可空，多标签请用格式，注意:后面有个空格</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">以下是正文</span></span><br></pre></td></tr></table></figure><p>那么hexo new page ‘postName’命令和hexo new ‘postName’区别</p><p>最终部署时生成：hexo\public\my-second-blog\index.html，但是它不会作为文章出现在博文目录。</p><h4 id="3-12-1-写博客工具"><a href="#3-12-1-写博客工具" class="headerlink" title="3.12.1 写博客工具"></a>3.12.1 写博客工具</h4><p>我一种用的都是MWeb，也可以使用Typora</p><h4 id="3-12-2-如何让博文列表不显示全部内容"><a href="#3-12-2-如何让博文列表不显示全部内容" class="headerlink" title="3.12.2. 如何让博文列表不显示全部内容"></a>3.12.2. 如何让博文列表不显示全部内容</h4><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上<a id="more"></a>即可</p><h2 id="4-绑定域名"><a href="#4-绑定域名" class="headerlink" title="4. 绑定域名"></a>4. 绑定域名</h2><p>这个是可选的，你不绑定域名肯定也是可以的，就用默认的 xxx.github.io 来访问，我是通过阿里云注册的域名，绑定域名分2种情况：带www和不带www的。</p><p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问</p><p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p><ul><li>如果你填写的是没有www的，比如 wangliquan.site，那么无论是访问 <a href="http://www.wangliquan.site" target="_blank" rel="noopener">http://www.wangliquan.site</a> 还是 <a href="http://wangliquan.site" target="_blank" rel="noopener">http://wangliquan.site</a> ，都会自动跳转到 <a href="http://wangliquan.site" target="_blank" rel="noopener">http://wangliquan.site</a></li><li>如果你填写的是带www的，比如 <a href="http://www.wangliquan.site" target="_blank" rel="noopener">www.wangliquan.site</a> ，那么无论是访问 <a href="http://www.wangliquan.site" target="_blank" rel="noopener">http://www.wangliquan.site</a> 还是 <a href="http://wangliquan.site" target="_blank" rel="noopener">http://wangliquan.site</a> ，都会自动跳转到 <a href="http://www.wangliquan.site" target="_blank" rel="noopener">http://www.wangliquan.site</a></li><li>如果你填写的是其它子域名，比如 abc.wangliquan.site，那么访问 <a href="http://abc.wangliquan.site" target="_blank" rel="noopener">http://abc.wangliquan.site</a> 没问题，但是访问 <a href="http://wangliquan.site" target="_blank" rel="noopener">http://wangliquan.site</a> ，不会自动跳转到 <a href="http://abc.wangliquan.site" target="_blank" rel="noopener">http://abc.wangliquan.site</a></li></ul><p>另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p><h2 id="5-图片资源的处理方案"><a href="#5-图片资源的处理方案" class="headerlink" title="5.  图片资源的处理方案"></a>5.  图片资源的处理方案</h2><p>使用完<code>hexo new &quot;这是一个新的博客&quot;</code>命令之后，会在source/_post文件夹里面就会出现一个“这是一个新的博客.md”的文件和一个“这是一个新的博客”的文件夹。</p><ol><li>引用图片的第一种方法</li></ol><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_img</span> 这是一个新的博客的图片.jpg 这是一个新的博客的图片的说明 %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>用此种方法，而不是以前的<code>![]()</code>方法，前提是你的hexo的版本是hexo3以上，到package.json里面看一下吧。如果不是hexo3以上的版本，那就只能用第二种方法了。</p><ol start="2"><li>hexo插件的方法</li></ol><p><a href="https://link.jianshu.com/?t=https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">插件链接</a></p><p>安装</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-<span class="built_in">image</span> --<span class="built_in">save</span></span><br></pre></td></tr></table></figure><p>之后就可以按照正常的方法使用的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我现在写了一个段落，并且想在这个段落的某一个地方![<span class="string">图片上传失败...</span>](<span class="link">image-43fc5f-1510018038370</span>)引入一张图片</span><br></pre></td></tr></table></figure><p>Mac有一个图床神器 iPic，在App Store中就可以下载</p><p><a href="https://toolinbox.net/iPic/" target="_blank" rel="noopener">iPic - Markdown 图床、文件上传工具</a></p><p><a href="https://toolinbox.net/iPic/AddAliOSS.html" target="_blank" rel="noopener">在 iPic 中添加阿里云 OSS</a></p><h2 id="6-设置主题"><a href="#6-设置主题" class="headerlink" title="6. 设置主题"></a>6. 设置主题</h2><p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">next主题</a></p><p><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT 使用文档</a></p><p><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/yinxiang/p/9237488.html" target="_blank" rel="noopener">利用GitHub搭建Hexo博客并开启HTTPS</a></p><p><a href="https://www.jianshu.com/p/eded1dd2d794" target="_blank" rel="noopener">如何搭建个人博客 ？Hexo + GitHub 是一个不错的选择</a></p>]]></content>
    
    <summary type="html">
    
      使用hexo+github搭建免费个人博客详细教程
    
    </summary>
    
      <category term="Hexo" scheme="https://lqwang521.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://lqwang521.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://lqwang521.github.io/tags/Next/"/>
    
  </entry>
  
</feed>
